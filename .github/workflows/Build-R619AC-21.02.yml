#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: Build OpenWrt

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
  watch:
    types: [started]
    
env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: openwrt-21.02
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
           
    steps:

    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@main
      with:
        # this might remove tools that are actually needed,
        # if set to "true" but frees about 6 GB
        tool-cache: true
        
        # all of these default to true, but feel free to set to
        # "false" if necessary for your workflow
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        swap-storage: true
        
    - name: Checkout
      uses: actions/checkout@v3.1.0  
      
    - name: Disk space
      run: |
           echo "Free space:"
           df -h

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq full-upgrade
        sudo -E apt-get -qq install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pyelftools libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        cd openwrt
        useVersionInfo=$(git show -s --date=short --format="Author: %an<br/>date: %cd<br/>commit: %s<br/>commit hash: %H<br/>")
        echo "useVersionInfo=$useVersionInfo" >> $GITHUB_ENV

    - name: Update packages
      env:
        SCKEY: ${{ secrets.ACTIONS_TRIGGER_PAT }}
      run: |
        ls
        cd openwrt/package
        mkdir NeoBird
        cd NeoBird
        # 1.走遍天下
        rm -rf feeds/luci/applications/luci-app-openclash
        svn export https://github.com/leesuncom/OpenClash/trunk/luci-app-openclash luci-app-openclash
        
        # 2.主题
        # git clone -b js https://github.com/sirpdboy/luci-theme-kucat.git
        # git clone https://github.com/jerrykuku/luci-theme-argon.git
        # git clone https://github.com/jerrykuku/luci-app-argon-config.git

        # 3.域名加速（一）
        # rm -rf feeds/packages/net/v2ray-geodata
        # rm -rf feeds/packages/net/mosdns
        # git clone https://github.com/sbwml/luci-app-mosdns -b v5
        # git clone https://github.com/sbwml/v2ray-geodata
        
        # 4.域名加速（二）
        rm -rf feeds/luci/applications/luci-app-smartdns
        rm -rf feeds/packages/net/smartdns
        # git clone https://github.com/pymumu/luci-app-smartdns.git
        svn export https://github.com/kenzok8/openwrt-packages/trunk/luci-app-smartdns luci-app-smartdns
        # git clone https://github.com/leesuncom/luci-app-smartdns.git
        svn export https://github.com/leesuncom/custom/trunk/package/smartdns smartdns      

        # 5.广告拦截
        # git clone https://github.com/kongfl888/luci-app-adguardhome

        # 6.网盘映射
        # git clone https://github.com/sbwml/luci-app-alist

        # 7.逛世界
        # git clone https://github.com/xiaorouji/openwrt-passwall
        # git clone https://github.com/xiaorouji/openwrt-passwall-packages.git
        
        # 8智能机器人
        git clone https://github.com/sirpdboy/chatgpt-web.git luci-app-chatgpt

    - name: FilePatch
      run: |
        # cp -r -f patch/mosdns /feeds/packages/net/mosdns
        cp -f patch/rc.local openwrt/package/base-files/files/etc/rc.local
        cd openwrt
        sed -i "22i chmod 755 /etc/smartdns/up.sh" package/emortal/default-settings/files/99-default-settings-chinese
        sed -i 's/192.168.1.1/192.168.1.2/g' package/base-files/files/bin/config_generate
        sed -i "s/hostname='.*'/hostname='NeoBird'/g" ./package/base-files/files/bin/config_generate
        sed -i "s/timezone='.*'/timezone='CST-8'/g" ./package/base-files/files/bin/config_generate
        sed -i "/timezone='.*'/a\\\t\t\set system.@system[-1].zonename='Asia/Shanghai'" ./package/base-files/files/bin/config_generate

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a && ./scripts/feeds install -a

    - name: FilePatch2
      run: |
        rm -rf feeds/packages/lang/golang
        svn co https://github.com/openwrt/packages/branches/openwrt-23.05/lang/golang feeds/packages/lang/golang
        # rm -rf feeds/packages/lang/golang
        # it clone https://github.com/sbwml/packages_lang_golang -b 20.x feeds/packages/lang/golang
        
    - name: Generate configuration file
      run: |
        cd openwrt
        rm -f ./.config*
        touch ./.config

        #
        # ========================固件定制部分========================
        # 

        # 
        # 如果不对本区块做出任何编辑, 则生成默认配置固件. 
        # 

        # 以下为定制化固件选项和说明:
        #

        #
        # 有些插件/选项是默认开启的, 如果想要关闭, 请参照以下示例进行编写:
        # 
        #          =========================================
        #         |  # 取消编译VMware镜像:                   |
        #         |  cat >> .config <<EOF                   |
        #         |  # CONFIG_VMDK_IMAGES is not set        |
        #         |  EOF                                    |
        #          =========================================
        #

        # 
        # 以下是一些提前准备好的一些插件选项.
        # 直接取消注释相应代码块即可应用. 不要取消注释代码块上的汉字说明.
        # 如果不需要代码块里的某一项配置, 只需要删除相应行.
        #
        # 如果需要其他插件, 请按照示例自行添加.
        # 注意, 只需添加依赖链顶端的包. 如果你需要插件 A, 同时 A 依赖 B, 即只需要添加 A.
        # 
        # 无论你想要对固件进行怎样的定制, 都需要且只需要修改 EOF 回环内的内容.
        # 

        # 编译竞斗云固件:
        cat >> .config <<EOF
        CONFIG_TARGET_ipq40xx=y
        CONFIG_TARGET_ipq40xx_generic=y
        CONFIG_TARGET_ipq40xx_generic_DEVICE_p2w_r619ac-128m=y
        EOF

        # IPv6支持:
        cat >> .config <<EOF
        CONFIG_PACKAGE_dnsmasq_full_dhcpv6=y
        CONFIG_PACKAGE_ipv6helper=y
        EOF

        # LuCI插件选择:
        cat >> .config <<EOF
        CONFIG_PACKAGE_luci-app-chatgpt=y
        CONFIG_PACKAGE_luci-app-ttyd=y
        CONFIG_PACKAGE_luci-app-autoreboot=y
        CONFIG_PACKAGE_luci-app-ddns=y
        CONFIG_PACKAGE_luci-app-firewall=y        
        CONFIG_PACKAGE_luci-app-turboacc=y
        CONFIG_PACKAGE_luci-app-udpxy=y
        CONFIG_PACKAGE_luci-app-upnp=y
        CONFIG_PACKAGE_luci-app-vlmcsd=y
        CONFIG_PACKAGE_luci-app-wol=y
        CONFIG_PACKAGE_luci-app-openclash=y
        CONFIG_PACKAGE_luci-app-argon-config=y
        CONFIG_PACKAGE_luci-app-smartdns=y
        # CONFIG_PACKAGE_luci-app-ramfree=y
        # CONFIG_PACKAGE_luci-app-passwall=y
        # CONFIG_PACKAGE_luci-app-mosdns=y
        # CONFIG_PACKAGE_luci-app-commands=y
        # CONFIG_PACKAGE_luci-app-adguardhome is not set
        EOF

        # LuCI主题:
        cat >> .config <<EOF
        # CONFIG_PACKAGE_luci-theme-kucat=y
        CONFIG_PACKAGE_luci-theme-argon=y
        EOF

        # 常用软件包:
        cat >> .config <<EOF
        CONFIG_PACKAGE_irqbalance=y
        CONFIG_PACKAGE_autocore-arm=y
        CONFIG_PACKAGE_e2fsprogs=y
        CONFIG_PACKAGE_firewall4=y
        CONFIG_PACKAGE_miniupnpd-nftables=y
        EOF

        # 取消编译VMware镜像以及镜像填充 (不要删除被缩进的注释符号):
        # cat >> .config <<EOF
        # # CONFIG_TARGET_IMAGES_PAD is not set
        # # CONFIG_VMDK_IMAGES is not set
        # EOF

        # 
        # ========================固件定制部分结束========================
        # 

        sed -i 's/^[ \t]*//g' ./.config
        make defconfig

    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: Download package
      id: package
      run: |
        cd openwrt 
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "::set-output name=status::success"
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd $GITHUB_WORKSPACE/openwrt/bin/packages
        tar -zcvf Packages.tar.gz ./*
        cp Packages.tar.gz $GITHUB_WORKSPACE/openwrt/bin/targets/*/*
        cd $GITHUB_WORKSPACE/openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"
        echo "::set-output name=release_tag::$(date +"%Y.%m.%d-%H%M")"

    - name: Calculate MD5
      run: |
        cd ${{ env.FIRMWARE }} && rm -rf sha256sums
        MD5=$(md5sum * | sed ':a;N;$!ba;s/\n/<br>/g')
        echo "MD5=$MD5" >> $GITHUB_ENV

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Upload OpenWrt Firmware to Release
      id: release
      uses: ncipollo/release-action@v1
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        name: R${{ steps.organize.outputs.release_tag }} for R619AC
        allowUpdates: true
        removeArtifacts: true
        tag: ${{ steps.organize.outputs.release_tag }}
        commit: main
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: ${{ env.FIRMWARE }}/*
        body: |
          - 默认IP：192.168.2.1
          - 默认密码：password
          - 当前使用版本:【编译前的最后一次[➦主源码](${{ env.REPO_URL }})更新记录】
          - 下载后请仔细校验MD5，如不正确请重新下载
          ${{ env.useVersionInfo }}
          
          `md5sum`
          > ${{ env.MD5 }}

    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 4
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
